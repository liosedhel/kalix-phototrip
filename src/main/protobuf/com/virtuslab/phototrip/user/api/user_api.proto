syntax = "proto3";

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "com/virtuslab/phototrip/user/domain/user_domain.proto";

package com.virtuslab.phototrip.user.api;

message CreateNewUser {
  string user_id = 1 [(kalix.field).entity_key = true];
  string email = 2;
  string nick = 3;
}

message GetUser {
  string user_id = 1 [(kalix.field).entity_key = true];
}

service UserService {
  option (kalix.codegen) = {
    replicated_entity: {
      name: "com.virtuslab.phototrip.user.domain.UserReplicatedEntity"
      entity_type: "user"
      replicated_register: {
        value: "com.virtuslab.phototrip.user.domain.User"
      }
    }
  };
  option (kalix.service).acl.allow = { principal: ALL };

  rpc Create (CreateNewUser) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/users"
    };
  };

  rpc Get (GetUser) returns (com.virtuslab.phototrip.user.domain.User) {
    option (google.api.http) = {
      get: "/users/{user_id}"
    };
  };
}